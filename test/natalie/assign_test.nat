require 'spec'

class ArrayLike
  def initialize(*values)
    @values = values
  end

  def to_ary
    @values
  end
end

describe 'assignment' do
  it 'does single assignment' do
    a = 1
    a.must_equal 1
  end

  it 'does multiple assignment from an array' do
    (a, b) = [1, 2]
    a.must_equal 1
    b.must_equal 2
    a, b = [3, 4]
    a.must_equal 3
    b.must_equal 4
    a, b = [5, 6, 7]
    a.must_equal 5
    b.must_equal 6
    a, b, c = [8, 9]
    a.must_equal 8
    b.must_equal 9
    c.must_equal nil
  end

  it 'does multiple assignment from an array-like object' do
    (a, b) = ArrayLike.new(1, 2)
    a.must_equal 1
    b.must_equal 2
    a, b = ArrayLike.new(3, 4)
    a.must_equal 3
    b.must_equal 4
    a, b = ArrayLike.new(5, 6, 7)
    a.must_equal 5
    b.must_equal 6
    a, b, c = ArrayLike.new(8, 9)
    a.must_equal 8
    b.must_equal 9
    c.must_equal nil
  end

  it 'fills in extra variables with nil when the value is not array-like' do
    o = Object.new
    (a, b) = o
    a.must_equal o
    b.must_equal nil
  end

  xit 'does nested multiple assignment from an array' do
    #((a, b), c) = [[1, 2], 3]
    #a.must_equal 1
    #b.must_equal 2
    #c.must_equal 3
    #(a, b, c) = [[4, 5], 6, 7]
    #a.must_equal [4, 5]
    #b.must_equal 6
    #c.must_equal 7
  end
end

run_specs
